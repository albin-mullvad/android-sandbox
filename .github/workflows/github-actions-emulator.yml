name: Github actions emulator
on:
    push:
      branches:
        - wip-uia
    workflow_dispatch:
      inputs:
        override_container_image:
          description: 'Override container image'
          type: string
          required: false
jobs:
    prepare:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            repository: mullvad/mullvadvpn-app
            ref: test-mockapi

        - name: Use custom container image if specified
          if: "${{ github.event.inputs.override_container_image != '' }}"
          run: echo "inner_container_image=${{ github.event.inputs.override_container_image }}" >> $GITHUB_ENV

        - name: Use default container image and resolve digest
          if: "${{ github.event.inputs.override_container_image == '' }}"
          run: |
            echo "inner_container_image=$(cat ./building/android-container-image.txt)" >> $GITHUB_ENV

        outputs:
          container_image: "${{ env.inner_container_image }}"

    build:
        needs: prepare
        runs-on: ubuntu-latest
        container:
          image: "${{ needs.prepare.outputs.container_image }}"
        steps:
            # Fix for HOME path overridden by GH runners when building in containers, see:
            # https://github.com/actions/runner/issues/863
            - name: Fix HOME path
              run: echo "HOME=/root" >> $GITHUB_ENV

            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                repository: mullvad/mullvadvpn-app
                ref: test-mockapi
            
            - name: Build relay list
              env:
                RUSTFLAGS: --deny warnings
              run: cargo run --bin relay_list > dist-assets/relays.json

            - name: Calculate native lib cache hash
              id: native-lib-cache-hash
              shell: bash
              run: |
                non_android_hash="$(git grep --cached -l '' -- ':!android/' | xargs -d '\n' sha1sum | sha1sum | awk '{print $1}')"
                echo "native_lib_hash=$non_android_hash" >> $GITHUB_OUTPUT

            - name: Cache native libraries
              uses: actions/cache@v3
              id: cache-native-libs
              with:
                path: |
                  ./android/app/build/extraJni
                key: android-native-libs-${{ runner.os }}-${{ steps.native-lib-cache-hash.outputs.native_lib_hash }}-test-v1

            - name: Build native libraries
              if: steps.cache-native-libs.outputs.cache-hit != 'true'
              strategy:
                matrix:
                  include:
                  - abi: "x86_64"
                    target: "x86_64-linux-android"
                  - abi: "aarch64"
                    target: "aarch64-linux-android"
              env:
                RUSTFLAGS: --deny warnings
                # ABI: x86_64
                # TARGET: x86_64-linux-android
                BUILD_TYPE: debug
              run: |
                ARCHITECTURES="${{ matrix.abi }}"
                UNSTRIPPED_LIB_PATH="$CARGO_TARGET_DIR/${{ matrix.target }}/$BUILD_TYPE/libmullvad_jni.so"
                STRIPPED_LIB_PATH="./android/app/build/extraJni/${{ matrix.abi }}/libmullvad_jni.so"
                NDK_TOOLCHAIN_STRIP_TOOL="$NDK_TOOLCHAIN_DIR/x86_64-linux-android-strip"
                ./wireguard/build-wireguard-go.sh --android --no-docker
                cargo build --target ${{ matrix.target }} --verbose --package mullvad-jni
                cargo run --bin relay_list > dist-assets/relays.json
                $NDK_TOOLCHAIN_STRIP_TOOL --strip-debug --strip-unneeded -o "$STRIPPED_LIB_PATH" "$UNSTRIPPED_LIB_PATH"

            - name: Build Android app
              uses: burrunan/gradle-cache-action@v1
              with:
                job-id: jdk11
                arguments: assembleDebug
                gradle-version: wrapper
                build-root-directory: android

            - name: Run unit tests
              uses: burrunan/gradle-cache-action@v1
              with:
                job-id: jdk11
                arguments: testDebugUnitTest
                gradle-version: wrapper
                build-root-directory: android
                execution-only-caches: true

            - name: Assemble instrumented test apk
              uses: burrunan/gradle-cache-action@v1
              with:
                job-id: jdk11
                arguments: assembleAndroidTest
                gradle-version: wrapper
                build-root-directory: android
                execution-only-caches: true

            - name: Assemble mockapi instrumented test apk
              uses: burrunan/gradle-cache-action@v1
              with:
                job-id: jdk11
                arguments: :test:mockapi:assemble
                gradle-version: wrapper
                build-root-directory: android
                execution-only-caches: true

            - name: Upload apks
              uses: actions/upload-artifact@v3
              with:
                name: apks
                path: |
                  android/app/build/outputs/apk
                  android/app/build/extraJni
                  android/test/mockapi/build/outputs/apk
                if-no-files-found: error
                retention-days: 1

    instrumented-tests:
      name: uia tests
      needs: build
      timeout-minutes: 60
    #   strategy:
    #     matrix:
    #       # os: [macos-latest]
    #       api: [32] #26, 27, 28, 29, 30, 31, 32 ,33
    #       emutype: [google_apis] # default, aosp_atd, google_apis, playstore

    #       include:
    #         # - os: ubuntu-latest
    #         #   emulator-options: -no-snapshot-save -no-window -noaudio -no-boot-anim -camera-back none
    #         - os: macos-latest
    #           emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none

    #     fail-fast: false
      runs-on: self-hosted
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            repository: mullvad/mullvadvpn-app
            ref: test-mockapi

        - uses: actions/download-artifact@v3
          with:
            name: apks
            path: android

        - name: Calculate native lib cache hash
          shell: bash
          run: |
            curl -sL https://dl.google.com/android/maven2/androidx/test/orchestrator/1.4.2/orchestrator-1.4.2.apk -o /tmp/orchestrator.apk
            curl -sL https://dl.google.com/android/maven2/androidx/test/services/test-services/1.4.2/test-services-1.4.2.apk -o /tmp/test-services.apk
            export ORCHESTRATOR_APK_PATH=/tmp/orchestrator.apk
            export TEST_SERVICES_APK_PATH=/tmp/test-services.apk
            android/scripts/run-instrumented-tests.sh mockapi
